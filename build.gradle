buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }

    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.6.2' // 4.1.0
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'

group 'com.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/plugins-release" }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'

    dockerJava 'com.aries:docker-java-shaded:3.1.0-rc-5:cglib@jar'
    dockerJava 'org.slf4j:slf4j-simple:1.7.25'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task dockerfile(type: Dockerfile) {
    from 'java:openjdk-8-jre-alpine'
    destFile = project.file("${buildDir}/docker_build/Dockerfile")
    addFile "${bootJar.archiveName}", '.'
    entryPoint 'java', '-jar', "${bootJar.archiveName}"
}

task copyJar(type: Copy) {
    dependsOn bootJar
    from bootJar.archivePath
    into project.file("${buildDir}/docker_build")
}

task buildImage(type: DockerBuildImage) {
    dependsOn dockerfile, copyJar, check
    inputDir = project.file("${buildDir}/docker_build")

    tags = [
            'spring-boot-app:' + version,
            'spring-boot-app:latest',
    ]
}
